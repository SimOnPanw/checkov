{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "3.2.91", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_AZURE_160", "name": "Azure HTTP (port 80) access from the internet is not restricted", "shortDescription": {"text": "Azure HTTP (port 80) access from the internet is not restricted"}, "fullDescription": {"text": "Azure HTTP (port 80) access from the internet is not restricted"}, "help": {"text": "Azure HTTP (port 80) access from the internet is not restricted\nResource: azurerm_network_security_group.nginx-vm-nsg"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "3.9"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/ensure-azure-http-port-80-access-from-the-internet-is-restricted"}, {"id": "CKV_AZURE_10", "name": "Azure Network Security Group allows all traffic on SSH port 22", "shortDescription": {"text": "Azure Network Security Group allows all traffic on SSH port 22"}, "fullDescription": {"text": "Azure Network Security Group allows all traffic on SSH port 22"}, "help": {"text": "Azure Network Security Group allows all traffic on SSH port 22\nResource: azurerm_network_security_group.nginx-vm-nsg"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "0.0"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-3"}, {"id": "CKV_AZURE_178", "name": "Linux VM Without SSH Key", "shortDescription": {"text": "Linux VM Without SSH Key"}, "fullDescription": {"text": "Linux VM Without SSH Key"}, "help": {"text": "Linux VM Without SSH Key\nResource: azurerm_linux_virtual_machine.nginx-vm"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/azr-general-178"}, {"id": "CKV_AZURE_1", "name": "Azure Virtual Machine (Linux) does not authenticate using SSH keys", "shortDescription": {"text": "Azure Virtual Machine (Linux) does not authenticate using SSH keys"}, "fullDescription": {"text": "Azure Virtual Machine (Linux) does not authenticate using SSH keys"}, "help": {"text": "Azure Virtual Machine (Linux) does not authenticate using SSH keys\nResource: azurerm_linux_virtual_machine.nginx-vm"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "3.9"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-1"}, {"id": "CKV_AZURE_50", "name": "Virtual Machine extensions are installed", "shortDescription": {"text": "Virtual Machine extensions are installed"}, "fullDescription": {"text": "Virtual Machine extensions are installed"}, "help": {"text": "Virtual Machine extensions are installed\nResource: azurerm_linux_virtual_machine.nginx-vm"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "6.9"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/bc-azr-general-14"}, {"id": "CKV_AZURE_149", "name": "Azure SQL on Virtual Machine (Linux) with basic authentication", "shortDescription": {"text": "Azure SQL on Virtual Machine (Linux) with basic authentication"}, "fullDescription": {"text": "Azure SQL on Virtual Machine (Linux) with basic authentication"}, "help": {"text": "Azure SQL on Virtual Machine (Linux) with basic authentication\nResource: azurerm_linux_virtual_machine.nginx-vm"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "3.9"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/ensure-azure-virtual-machine-does-not-enable-password-authentication"}, {"id": "CKV_AZURE_119", "name": "Network interfaces use public IPs", "shortDescription": {"text": "Network interfaces use public IPs"}, "fullDescription": {"text": "Network interfaces use public IPs"}, "help": {"text": "Network interfaces use public IPs\nResource: azurerm_network_interface.nginx-nic"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "3.9"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/ensure-that-network-interfaces-dont-use-public-ips"}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_AZURE_160", "ruleIndex": 0, "level": "note", "attachments": [], "message": {"text": "Azure HTTP (port 80) access from the internet is not restricted"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "iac-azure-aks-belfius/vm.tf"}, "region": {"startLine": 35, "endLine": 65, "snippet": {"text": "resource \"azurerm_network_security_group\" \"nginx-vm-nsg\" {\n  depends_on          = [azurerm_resource_group.rg]\n  name                = \"nginx-nsg\"\n  location            = azurerm_resource_group.rg.location\n  resource_group_name = azurerm_resource_group.rg.name\n  security_rule {\n    name                       = \"Allow-SSH\"\n    description                = \"Allow SSH\"\n    priority                   = 100\n    direction                  = \"Inbound\"\n    access                     = \"Allow\"\n    protocol                   = \"Tcp\"\n    source_port_range          = \"*\"\n    destination_port_range     = \"22\"\n    source_address_prefix      = \"Internet\"\n    destination_address_prefix = \"*\"\n  }\n\n  security_rule {\n    name                       = \"Allow-HTTP\"\n    description                = \"Allow HTTP\"\n    priority                   = 110\n    direction                  = \"Inbound\"\n    access                     = \"Allow\"\n    protocol                   = \"Tcp\"\n    source_port_range          = \"*\"\n    destination_port_range     = \"80\"\n    source_address_prefix      = \"Internet\"\n    destination_address_prefix = \"*\"\n  }\n}\n"}}}}]}, {"ruleId": "CKV_AZURE_10", "ruleIndex": 1, "level": "none", "attachments": [], "message": {"text": "Azure Network Security Group allows all traffic on SSH port 22"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "iac-azure-aks-belfius/vm.tf"}, "region": {"startLine": 35, "endLine": 65, "snippet": {"text": "resource \"azurerm_network_security_group\" \"nginx-vm-nsg\" {\n  depends_on          = [azurerm_resource_group.rg]\n  name                = \"nginx-nsg\"\n  location            = azurerm_resource_group.rg.location\n  resource_group_name = azurerm_resource_group.rg.name\n  security_rule {\n    name                       = \"Allow-SSH\"\n    description                = \"Allow SSH\"\n    priority                   = 100\n    direction                  = \"Inbound\"\n    access                     = \"Allow\"\n    protocol                   = \"Tcp\"\n    source_port_range          = \"*\"\n    destination_port_range     = \"22\"\n    source_address_prefix      = \"Internet\"\n    destination_address_prefix = \"*\"\n  }\n\n  security_rule {\n    name                       = \"Allow-HTTP\"\n    description                = \"Allow HTTP\"\n    priority                   = 110\n    direction                  = \"Inbound\"\n    access                     = \"Allow\"\n    protocol                   = \"Tcp\"\n    source_port_range          = \"*\"\n    destination_port_range     = \"80\"\n    source_address_prefix      = \"Internet\"\n    destination_address_prefix = \"*\"\n  }\n}\n"}}}}]}, {"ruleId": "CKV_AZURE_178", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "Linux VM Without SSH Key"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "iac-azure-aks-belfius/vm.tf"}, "region": {"startLine": 95, "endLine": 119, "snippet": {"text": "resource \"azurerm_linux_virtual_machine\" \"nginx-vm\" {\n  depends_on            = [azurerm_network_interface.nginx-nic]\n  name                  = \"nginx-vm\"\n  location              = azurerm_resource_group.rg.location\n  resource_group_name   = azurerm_resource_group.rg.name\n  network_interface_ids = [azurerm_network_interface.nginx-nic.id]\n  size                  = var.nginx_vm_size\n  source_image_reference {\n    publisher = var.publisher\n    offer     = var.offer\n    sku       = var.sku\n    version   = \"latest\"\n  }\n  os_disk {\n    name                 = \"nginx-osdisk\"\n    caching              = \"ReadWrite\"\n    storage_account_type = \"Standard_LRS\"\n  }\n\n  computer_name                   = \"nginx-vm\"\n  admin_username                  = var.nginx_admin_username\n  admin_password                  = random_password.nginx-vm-password.result\n  disable_password_authentication = false\n  custom_data                     = base64encode(data.template_file.nginx-vm-cloud-init.rendered)\n}\n"}}}}]}, {"ruleId": "CKV_AZURE_1", "ruleIndex": 3, "level": "note", "attachments": [], "message": {"text": "Azure Virtual Machine (Linux) does not authenticate using SSH keys"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "iac-azure-aks-belfius/vm.tf"}, "region": {"startLine": 95, "endLine": 119, "snippet": {"text": "resource \"azurerm_linux_virtual_machine\" \"nginx-vm\" {\n  depends_on            = [azurerm_network_interface.nginx-nic]\n  name                  = \"nginx-vm\"\n  location              = azurerm_resource_group.rg.location\n  resource_group_name   = azurerm_resource_group.rg.name\n  network_interface_ids = [azurerm_network_interface.nginx-nic.id]\n  size                  = var.nginx_vm_size\n  source_image_reference {\n    publisher = var.publisher\n    offer     = var.offer\n    sku       = var.sku\n    version   = \"latest\"\n  }\n  os_disk {\n    name                 = \"nginx-osdisk\"\n    caching              = \"ReadWrite\"\n    storage_account_type = \"Standard_LRS\"\n  }\n\n  computer_name                   = \"nginx-vm\"\n  admin_username                  = var.nginx_admin_username\n  admin_password                  = random_password.nginx-vm-password.result\n  disable_password_authentication = false\n  custom_data                     = base64encode(data.template_file.nginx-vm-cloud-init.rendered)\n}\n"}}}}]}, {"ruleId": "CKV_AZURE_50", "ruleIndex": 4, "level": "warning", "attachments": [], "message": {"text": "Virtual Machine extensions are installed"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "iac-azure-aks-belfius/vm.tf"}, "region": {"startLine": 95, "endLine": 119, "snippet": {"text": "resource \"azurerm_linux_virtual_machine\" \"nginx-vm\" {\n  depends_on            = [azurerm_network_interface.nginx-nic]\n  name                  = \"nginx-vm\"\n  location              = azurerm_resource_group.rg.location\n  resource_group_name   = azurerm_resource_group.rg.name\n  network_interface_ids = [azurerm_network_interface.nginx-nic.id]\n  size                  = var.nginx_vm_size\n  source_image_reference {\n    publisher = var.publisher\n    offer     = var.offer\n    sku       = var.sku\n    version   = \"latest\"\n  }\n  os_disk {\n    name                 = \"nginx-osdisk\"\n    caching              = \"ReadWrite\"\n    storage_account_type = \"Standard_LRS\"\n  }\n\n  computer_name                   = \"nginx-vm\"\n  admin_username                  = var.nginx_admin_username\n  admin_password                  = random_password.nginx-vm-password.result\n  disable_password_authentication = false\n  custom_data                     = base64encode(data.template_file.nginx-vm-cloud-init.rendered)\n}\n"}}}}]}, {"ruleId": "CKV_AZURE_149", "ruleIndex": 5, "level": "note", "attachments": [], "message": {"text": "Azure SQL on Virtual Machine (Linux) with basic authentication"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "iac-azure-aks-belfius/vm.tf"}, "region": {"startLine": 95, "endLine": 119, "snippet": {"text": "resource \"azurerm_linux_virtual_machine\" \"nginx-vm\" {\n  depends_on            = [azurerm_network_interface.nginx-nic]\n  name                  = \"nginx-vm\"\n  location              = azurerm_resource_group.rg.location\n  resource_group_name   = azurerm_resource_group.rg.name\n  network_interface_ids = [azurerm_network_interface.nginx-nic.id]\n  size                  = var.nginx_vm_size\n  source_image_reference {\n    publisher = var.publisher\n    offer     = var.offer\n    sku       = var.sku\n    version   = \"latest\"\n  }\n  os_disk {\n    name                 = \"nginx-osdisk\"\n    caching              = \"ReadWrite\"\n    storage_account_type = \"Standard_LRS\"\n  }\n\n  computer_name                   = \"nginx-vm\"\n  admin_username                  = var.nginx_admin_username\n  admin_password                  = random_password.nginx-vm-password.result\n  disable_password_authentication = false\n  custom_data                     = base64encode(data.template_file.nginx-vm-cloud-init.rendered)\n}\n"}}}}]}, {"ruleId": "CKV_AZURE_119", "ruleIndex": 6, "level": "note", "attachments": [], "message": {"text": "Network interfaces use public IPs"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "iac-azure-aks-belfius/vm.tf"}, "region": {"startLine": 81, "endLine": 93, "snippet": {"text": "resource \"azurerm_network_interface\" \"nginx-nic\" {\n  depends_on          = [azurerm_resource_group.rg]\n  name                = \"nginx-nic\"\n  location            = azurerm_resource_group.rg.location\n  resource_group_name = azurerm_resource_group.rg.name\n\n  ip_configuration {\n    name                          = \"internal\"\n    subnet_id                     = azurerm_subnet.subnets[1].id\n    private_ip_address_allocation = \"Dynamic\"\n    public_ip_address_id          = azurerm_public_ip.nginx-vm-ip.id\n  }\n}\n"}}}}]}]}]}